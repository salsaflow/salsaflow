#!/bin/bash
set -e
set -o pipefail

. git-flow2-spinner.sh
. git-flow2-rainbow.sh
. git-flow2-common.sh

ensure_repo_is_initialized

trap cleanup EXIT

function cleanup {
  stop_spinner 0
}

__bold=`tput bold`
__normal=`tput sgr0`

# Make sure we're spliting strings by newlines.
export IFS=$'\n'

BRANCH=`git branch | sed -n '/\* /s///p'`
STORY_ID=`echo ${BRANCH} | rev | cut -d"/" -f 1 | rev`

# Check whether we're on a story branch.
if [[ ! "${BRANCH}" == story/* ]]; then
  echo "I'm sorry Dave, I can't let you do that. You don't seem to be on a story branch."
  echo "Your branch is '${BRANCH}'. You have to checkout a story branch."
  echo "I will cowardly exit now. Have a good day."
  exit 1
fi

function count_commits {
  local count;
  count=`git log ${TRUNK_BRANCH}..HEAD --pretty="oneline" | wc -l`
  echo ${count//[[:blank:]]/}
}

echo "You are posting reviews for story ${STORY_ID}. Swell!"
echo
echo "Here's what's going to happen:"
echo -e "\t 1) We'll rebase your branch '${BRANCH}' on top of branch '${TRUNK_BRANCH}'"
echo -e "\t 2) We'll post a review for each commit on your branch (that should be $(count_commits) commits)."
echo
echo "Alright."
echo
echo "    ,-~~-.___.          "
echo "   / |  '     \         " 
echo "  (  )         0    Let's do this!"
echo "   \_/-, ,----'         "
echo "      ====           // "
echo "     /  \-'~;    /~~~(O)"
echo "    /  __/~|   /       |"
echo "  =(  _____| (_________|"
echo
echo; echogreen "Enter GitHub"

start_spinner "Fetching origin to get latest ${TRUNK_BRANCH}..."
git fetch origin -a
stop_spinner 0

echo; echogreen "Enter Rebase"

echo -e "Rebasing ${BRANCH} on top of ${TRUNK_BRANCH}..."
git rebase ${TRUNK_BRANCH} || {
  panic \ 
    "Oh noes! Looks like rebase failed." \
    "But you'll be fine. Really.\n${__bold}Follow git's instructions above \
and when you're done, just run me again.${__normal}"
}

echo; echo -e "Sweet, ${BRANCH} is now totally rebased on top of ${TRUNK_BRANCH}!"


echo; echogreen "Enter ReviewBoard"

branch_commits=($(git log ${TRUNK_BRANCH}..HEAD --pretty="format:%h"))
commit_titles=($(git log ${TRUNK_BRANCH}..HEAD --pretty="format:%h - %an, %ad : %s"))

echo "I will now post reviews for the following commits: "
echo
for i in "${!commit_titles[@]}"; do
  echo ${commit_titles[$i]}
done

echo

# Prompt user for a y/n.
read -p "You cool with that? [y/n] " -n 1 -r
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
  echo
  echo "I will exit now. If you want to try again, just run me again."
  echo "Have a nice day."
  exit 0
fi

echo
echo "Posting... (might take a while or two)"

for i in "${!branch_commits[@]}"; do
  rbt post -g yes --branch "${STORY_ID}" ${branch_commits[$i]}
  echo
done

echo
echo "All done".

echo; echogreen "Next Steps"
echo "Please go through the reviews and annotate them. If you find any issues you "
echo "want to fix right before publishing, fix them now, amend the relevant commits "
echo "and use 'rbt post' to update the reviews."
echo
echored "###########################################################"
echored "# IMPORTANT: Your code has not been merged and/or pushed. #"
echored "###########################################################"
echo
echo "NEXT STEPS:"
echo -e "\t 1) When you think the reviews are ready to be published, publish them in ReviewBoard."
echo -e "\t 2) Run 'git flow feature finish' to rebase and merge your branch into ${TRUNK_BRANCH} and "
echo -e "\t    set the story state in Pivotal Tracker to 'finished'."
echo
echo "Now have a good day!"
