package issues_test

import (
	// issues package.
	. "github.com/salsaflow/salsaflow/github/issues"

	// Stdlib
	"testing"

	// Vendor
	"github.com/google/go-github/github"

	// Vendor - testing framework
	"github.com/onsi/ginkgo"
	"github.com/onsi/gomega"
)

var (
	BeforeEach     = ginkgo.BeforeEach
	Context        = ginkgo.Context
	Describe       = ginkgo.Describe
	It             = ginkgo.It
	JustBeforeEach = ginkgo.JustBeforeEach

	BeEmpty = gomega.BeEmpty
	BeNil   = gomega.BeNil
	BeTrue  = gomega.BeTrue
	BeZero  = gomega.BeZero
	Equal   = gomega.Equal
	Expect  = gomega.Expect
)

func TestReviewIssues(t *testing.T) {
	gomega.RegisterFailHandler(ginkgo.Fail)
	ginkgo.RunSpecs(t, "GitHub review issues")
}

// Common data -----------------------------------------------------------------

var commitList = NewCommitList(
	[]*CommitItem{
		{true, "fb8418b", "title A"},
		{true, "6336b11", "title B"},
		{false, "f68e07a", "title C"},
		{false, "d0cdb39", "title D"},
		{false, "e8d2c02", "title E"},
	},
)

var commitListString = string(
	`The commits to be reviewed are following:
- [x] fb8418b: title A
- [x] 6336b11: title B
- [ ] f68e07a: title C
- [ ] d0cdb39: title D
- [ ] e8d2c02: title E`)

var reviewBlockerList = NewReviewBlockerList(
	[]*ReviewBlockerItem{
		{true, "https://github.com/someurlA", "fb8418b47c92962e03b8036b4a40e96c5ae8bc7b", 1, "Bad!"},
		{true, "https://github.com/someurlB", "fb8418b47c92962e03b8036b4a40e96c5ae8bc7b", 2, "Bad!"},
		{false, "https://github.com/someurlC", "fb8418b47c92962e03b8036b4a40e96c5ae8bc7b", 3, "Bad!"},
		{false, "https://github.com/someurlD", "fb8418b47c92962e03b8036b4a40e96c5ae8bc7b", 4, "Bad!"},
		{false, "https://github.com/someurlE", "fb8418b47c92962e03b8036b4a40e96c5ae8bc7b", 5, "Bad!"},
	},
)

var reviewBlockerListString = string(
	`The following review blockers were opened by the reviewer:
- [x] [blocker 1](https://github.com/someurlA) (commit fb8418b47c92962e03b8036b4a40e96c5ae8bc7b): Bad!
- [x] [blocker 2](https://github.com/someurlB) (commit fb8418b47c92962e03b8036b4a40e96c5ae8bc7b): Bad!
- [ ] [blocker 3](https://github.com/someurlC) (commit fb8418b47c92962e03b8036b4a40e96c5ae8bc7b): Bad!
- [ ] [blocker 4](https://github.com/someurlD) (commit fb8418b47c92962e03b8036b4a40e96c5ae8bc7b): Bad!
- [ ] [blocker 5](https://github.com/someurlE) (commit fb8418b47c92962e03b8036b4a40e96c5ae8bc7b): Bad!`)

var userContentSeparator = "----------"

var userContentSection = string(
	`
I am the user and I decided to insert this custom content here.
`)

var defaultUserContentString = string(
	`
The content above was generated by SalsaFlow.
You can insert custom description here, but not above the separator.
`)

var emptyLine = ""

// Tests -----------------------------------------------------------------------

var _ = Describe("parsing a GitHub issue that is not a review issue", func() {

	githubIssue := &github.Issue{
		Title: github.String("Some random title"),
	}

	It("should return an error", func() {

		_, err := ParseReviewIssue(githubIssue)
		Expect(err).ToNot(BeNil())

		_, ok := err.(*ErrUnknownReviewIssueType)
		Expect(ok).To(BeTrue())
	})
})
